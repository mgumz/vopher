name: "GH Actions"
on:
  push:
    branches:
      - 'release/**'
      - 'sandbox/**'
      - 'gh-actions'
  release:
    types: [published, created, edited]

jobs:
  test:
    name: "Run unit tests"
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macOS-latest"]
        go: ["1.15.x", "1.16.x"]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: WillAbides/setup-go-faster@v1.5.0
      with:
        go-version: ${{ matrix.go }}
    - run: "go test ./internal/..."

  lint:
    name: "Run static analysis"
    runs-on: "ubuntu-latest"
    steps:
    - uses: WillAbides/setup-go-faster@v1.5.0
      with:
        go-version: "1.15.x"
    - run: "GO111MODULE=on go get honnef.co/go/tools/cmd/staticcheck"
    - uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - uses: actions/cache@v2
      with:
        path: ~/.cache/staticcheck
        key: staticcheck-${{ github.sha }}
        restore-keys: |
          staticcheck-
    - run: "go vet ./..."
    - run: "$(go env GOPATH)/bin/staticcheck -go 1.15 ./..."

  simple-run:
    name: "Sanity Check"
    runs-on: "ubuntu-latest"
    needs: [lint, test]
    steps:
      - uses: WillAbides/setup-go-faster@v1.5.0
        with:
          go-version: "1.16.x"
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - run: "make bin/vopher"
      - run: "./bin/vopher -version"

## DISABLED: we could automatically create the binaries. but then we have to
#ä download them as artifacts and reupload them.
# 
#  release-binaries:
#    name: "Create Release Binaries"
#    …