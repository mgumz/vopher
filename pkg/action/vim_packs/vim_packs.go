package vim_packs

import (
	"bytes"
	"fmt"
	"path"
	"slices"

	"github.com/mgumz/vopher/pkg/plugin"
)

func Execute(plugins plugin.List) {

	packs := sortedEntries{}
	packs.init(plugins)
	slices.SortFunc(packs, sortedEntry.cmp)

	fmt.Println(`" -- generated by vopher vim-pack`)

	depsSepPrefix := `" -- ^^ deps `
	buf := bytes.NewBuffer(nil)
	printDepsSep := true

	for i := range packs {

		buf.Reset()

		p := packs[i].p
		pn := path.Base(p.Name)
		if p.Opts.MinVersion != "" {
			fmt.Fprintf(buf, "if has(%q)|", p.Opts.MinVersion)
		}
		fmt.Fprintf(buf, "packadd! %s", pn)
		if p.Opts.MinVersion != "" {
			fmt.Fprint(buf, "|endif")
		}

		// print a separator between the dependencies and the "normal"
		// packs
		prevWasDep := (i > 0 && packs[i-1].weight > 0)
		currentIsRegular := (packs[i].weight == 0)
		if prevWasDep && currentIsRegular && printDepsSep {

			nFill := buf.Len() - len(depsSepPrefix) + 1
			fmt.Fprint(buf, "\n")
			fmt.Fprint(buf, depsSepPrefix)
			for range nFill {
				fmt.Fprint(buf, "-")
			}
			printDepsSep = false
		}

		fmt.Println(buf.String())
	}

	fmt.Println(`" vim: ft=vim`)
}
